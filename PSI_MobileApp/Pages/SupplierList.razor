@page "/supplierlist"
@using AccountDataSerializer
@using ClassLibrary
@using ProfileClasses
@using System.Collections.ObjectModel
@inject StateContainer StateContainer
@inject NavigationManager NavigationManager
@implements IDisposable

<h3>Supplier List</h3>

@if (Profiles == null)
{
	<p><em>Loading...</em></p>
}
else
{
    <div>
        <input class="form-control" type="text" placeholder="Search"
               @bind="Search"
               @oninput="(e) =>  SearchCommand(e.Value.ToString())" />


    </div>

	<table class="table">
		<thead>
			<tr>
				<th>Name</th>
				<th>Rating</th>
				<th>Email</th>
				<th>Phone number</th>
                <th>Cuisines</th>
			</tr>
		</thead>
		<tbody>
			@foreach (var supplier in SearchResults)
			{
                <tr @onclick="()=>GoToDetailOnClick(supplier)">
                    <td>@supplier.Name</td>
					<!-- <td>@supplier.Rating</td> -->
					<td>@supplier.Email</td>
					<td>@supplier.PhoneNumber</td>
                    <td>
                        @foreach (var cuisine in supplier.Cuisines)
                        {
                            @cuisine.ToString()<br>
                        }
                    </td>
				</tr>
			}
		</tbody>
	</table>
}

@code {
    private AccountDataSerializer<Profile> _dataSerializer;
    private ObservableCollection<Profile> _searchResult;
    public ObservableCollection<Profile> SearchResults
    {
        get
        { return _searchResult; }
        set
        {
            _searchResult = value;

            //onpropertychanged();
        }
    }

    public ObservableCollection<Profile> Profiles
    {
        get; private set;
    }

    public SupplierList()
    {
        ProjectDatabaseContext context = new();
        //_dataSerializer = new AccountDataSerializer<Profile>("C:\\Users\\Matas\\source\\repos\\psi1-project-new\\PSI_MobileApp\\ProfileData.json");
        //Profiles = _dataSerializer.List;
        Profiles = new ObservableCollection<Profile>(context.Profiles.ToList());
        SearchResults = new ObservableCollection<Profile> (context.Profiles.ToList());

    }

    public string Search { get; set; }

    public void SearchCommand(string search)
    {
        SearchResults = DataSearch.getSearchResults<Profile>(Profiles, searchQuery: search);
    }

    public void OnInitialize()
    {
        StateContainer.OnChange += StateHasChanged;
    }

    public void GoToDetailOnClick(Profile profile)
    {
        StateContainer.Supplier = profile;
        NavigationManager.NavigateTo("/supplierlist/supplierdetails");
    }

    public void Dispose()
    {
        StateContainer.OnChange -= StateHasChanged;
    }

}
